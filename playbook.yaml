---


- name: install docker,Docker-Compose, Docker-py, Docker-Compose-py, ssl for docker login
  hosts: all
  become: yes
  tasks:
    - name: Install Docker 
      yum: 
        name: docker
        update_cache: yes
        state: present
    - name: Install Docker-Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose          
        mode: +x
    - name: Install Docker-py, Docker-Compose-py, ssl for docker login
      pip:
        name: 
          - docker
          - Docker-Compose    
          - urllib3==1.26.15
    
- name: Start Docker-Compose
  hosts: all
  become: yes
  tasks:
    - name: Start Docker-Compose
      systemd:
        name: docker
        state: started

- name: Add EC2-user to docker group
  hosts: all
  become: yes
  tasks:
    - name: Add EC2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes
    - name: Reconnect to the server
      meta: reset_connection    

- name: Start Docker Container
  hosts: all
  vars_files:
    - vars 
  tasks:
    - name: Copy docker_compose.yaml file
      copy:
        src: /jenk_project/docker-compose.yaml
        dest: /home/ec2-user/docker-compose.yaml
    - name: Docker Login 
      community.docker.docker_login: 
        registry_url: https://index.docker.io/v1/
        username: "omar1593321"
        password: "{{docker_password}}"    
    - name: Start Container from compose
      community.docker.docker_compose:
        project_src: /home/ec2-user/    
    - name: Copy dockerfile file
      copy:
        src: /jenk_project/dockerfile
        dest: /home/ec2-user/dockerfile

    - name: Build Docker image from Dockerfile
      community.docker.docker_image:
        name: My-WebSite
        source: build
        build:
          path: /home/ec2-user/
          dockerfile: dockerfile
        tag: latest
        state: present
    - name: Run Docker container
      community.docker.docker_container:
        name: My-WebSite
        image: My-WebSite:latest
        state: started
        ports:
          - "80:80"
        restart_policy: always  

          
